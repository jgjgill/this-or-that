// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String?
  posts      Post[]
  likes      Like[]
  comments   Comment[]
  votedPosts Vote[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Post {
  id            Int       @id @default(autoincrement())
  title         String
  this          String
  that          String
  description   String    @db.LongText
  thisImagePath String?
  thatImagePath String?
  likes         Like[]
  comments      Comment[]
  author        User      @relation(fields: [authorId], references: [id])
  authorId      Int
  voters        Vote[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Like {
  id         Int      @id @default(autoincrement())
  User       User     @relation(fields: [likeUserId], references: [id])
  likeUserId Int
  Post       Post     @relation(fields: [likePostId], references: [id], onDelete: Cascade)
  likePostId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Comment {
  id            Int      @id @default(autoincrement())
  content       String
  User          User     @relation(fields: [commentUserId], references: [id])
  commentUserId Int
  Post          Post     @relation(fields: [commentPostId], references: [id], onDelete: Cascade)
  commentPostId Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Image {
  id        Int      @id @default(autoincrement())
  imagePath String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vote {
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId     Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([postId, userId])
}
